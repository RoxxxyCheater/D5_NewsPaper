Проект NewsPaper -созданиt моделей приложения

Состоит из:
        1 Модель Author
          Модель, содержащая объекты всех авторов.
          Имеет следующие поля:
                cвязь «один к одному» с встроенной моделью пользователей User;
                рейтинг пользователя
        2 Модель Category
          Категории новостей/статей — темы, которые они отражают. Имеет единственное поле: название категории. Поле уникально.
        3 Модель Post
          Эта модель содержит в себе статьи и новости, которые создают пользователи.
          модель включает в себе следующие поля:
                связь «один ко многим» с моделью Author;
                поле с выбором — «статья» или «новость»;
                автоматически добавляемая дата и время создания;
                связь «многие ко многим» с моделью Category (с дополнительной моделью PostCategory);
                заголовок статьи/новости;
                текст статьи/новости;
                рейтинг статьи/новости.
        4 Модель PostCategory
          Промежуточная модель для связи «многие ко многим»:
                связь «один ко многим» с моделью Post;
                связь «один ко многим» с моделью Category.
        5 Модель Comment
          Под каждой новостью/статьёй можно оставлять комментарии которые сохраняются.
          Модель имеет следующие поля:
                связь «один ко многим» с моделью Post;
                связь «один ко многим» со встроенной моделью User (комментарии может оставить любой пользователь, необязательно автор);
                текст комментария;
                дата и время создания комментария;
                рейтинг комментария.

Эти модели также реализовывают методы:

        Методы like() и dislike() в моделях Comment и Post, которые увеличивают/уменьшают рейтинг на единицу.
        Метод preview() модели Post, который возвращает начало статьи (предварительный просмотр) длиной 124 символа и добавляет многоточие в конце.
        Метод update_rating() модели Author, который обновляет рейтинг пользователя, переданный в аргумент этого метода.
        Он состоит из следующего:
            суммарный рейтинг каждой статьи автора умножается на 3;
            суммарный рейтинг всех комментариев автора;
            суммарный рейтинг всех комментариев к статьям автора.

Результат задания подготовлен в файле ('/NewsPaper/commands.py'), в виде списка всех команд, запускаемых в Django shell.

Используемые комманды в консоли Django:

        Создание 3 пользователей (с помощью метода User.objects.create_user).
        Создание 3 объектов модели Author, связанные с пользователями.
        Добавление 4 категории в модель Category.
        Добавление 2 статей и 1 новость.
        Присвоение категории.
        Создание 4 комментариев к разным объектам модели Post.
        Так же применяются функции like() и dislike() к статьям/новостям и комментариям, скорректированны рейтинги этих объектов.
        Обновление рейтинга пользователей.
        Вывод username и рейтинг лучшего пользователя с примением сортировки и возврата поля первого объекта.
        Вывод даты добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
        Вывод всех комментариев (дата, пользователь, рейтинг, текст) к этой статье.

Новая страничка с адресом /news/, на которой выводится список всех новостей.

Все статьи выведены в виде заголовка, даты и первых 50 символов текста статьи.
Новости выводятся в порядке от более свежей до самой старой. Отображается всё по адресу /news/.

Сделана отдельная страница для полной информации о статье /news/<id новости>. На этой странице вся информация о статье. Название, текст и дата загрузки в формате ДЕНЬ-МЕСЯЦ-ГОД ЧАС:МИНУТЫ.

Написан собственный фильтр Censor, который цензурирует нежелательную лексику в названиях и текстах статей.




В классе-представлении добавлено редактирование профиля, добавлена проверка аутентификации.
Выполнены необходимые настройки пакета allauth в файле конфигурации.
В файле конфигурации определён адрес для перенаправления на страницу входа в систему и адрес перенаправления после успешного входа.
Реализован шаблон с формой входа в систему и выполнена настройка конфигурации URL.
Реализован шаблон страницы регистрации пользователей.
Реализована возможность регистрации через Google-аккаунт.
Созданны группы common и authors.
Реализовано автоматическое добавление новых пользователей в группу common.
Реализована возможность стать автором (быть добавленным в группу authors).
Для группы authors предоставлены права создания и редактирования объектов модели Post (новостей и статей).
В классах-представлениях добавления и редактирования новостей и статей добавленна проверка прав доступа.






#Исправить - ссылка на главную пропускает не авторизированных пользователей


Настроить программу по протоколу IMAP для почтового сервера